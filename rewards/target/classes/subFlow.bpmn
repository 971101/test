<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bpmn:definitions targetNamespace="http://www.omg.org/spec/BPMN/20100524/MODEL" exporter="jBPMN NB" exporterVersion="0.3" xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:java="http://jcp.org/en/jsr/detail?id=270" xmlns:jbpmn="http://jbpmn.java.net" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL">
    <bpmn:itemDefinition structureRef="String" itemKind="Physical" id="String"/>
    <bpmn:itemDefinition structureRef="Long" itemKind="Physical" id="Long"/>
    <bpmn:itemDefinition structureRef="java.util.Set" id="ItemDefinition_1"/>
    <bpmn:itemDefinition structureRef="java.util.Map" id="ItemDefinition_2"/>
    <bpmn:signal name="stopProcess" id="Signal_1"/>
    <bpmn:signal name="Signal 2" id="Signal_2"/>
    <bpmn:process isClosed="false" name="subFlow" id="subFlow">
        <bpmn:property itemSubjectRef="String" id="name"/>
        <bpmn:property itemSubjectRef="String" id="processInstanceId"/>
        <bpmn:property itemSubjectRef="String" id="stopProcess"/>
        <bpmn:property itemSubjectRef="String" id="result"/>
        <bpmn:property itemSubjectRef="String" id="restart"/>
        <bpmn:property itemSubjectRef="String" id="type"/>
        <bpmn:property itemSubjectRef="String" id="signal"/>
        <bpmn:property itemSubjectRef="String" id="output1"/>
        <bpmn:property name="ParentProcessInstanceId" itemSubjectRef="Long" id="ParentProcessInstanceId"/>
        <bpmn:property name="timestamp" itemSubjectRef="String" id="timestamp"/>
        <bpmn:property name="taskname" itemSubjectRef="String" id="taskname"/>
        <bpmn:scriptTask isForCompensation="false" startQuantity="1" completionQuantity="1" name="initial" id="_1423792335617">
            <bpmn:extensionElements>
                <jbpmn:ShapeDesign>{"outer":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(226,232,236)"},"border":{"color":"RGB(108,142,183)","width":2.5}},"inner":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(255,248,159)"},"border":{"color":"RGB(30,69,123)","width":1.0}}}</jbpmn:ShapeDesign>
            </bpmn:extensionElements>
            <bpmn:incoming>_1427268750065</bpmn:incoming>
            <bpmn:outgoing>_1427275318886</bpmn:outgoing>
            <bpmn:script>String Input5 = (String)kcontext.getVariable("input5");
System.out.println("in timersubflow Input5:"+Input5);
kcontext.setVariable("taskname", Input5);

//String glbName = (String)kcontext.getKnowledgeRuntime().getGlobal("name");
//String glbProcessInstanceId = (String)kcontext.getKnowledgeRuntime().getGlobal("glbProcessInstanceId");
//String glbstopProcess = (String)kcontext.getKnowledgeRuntime().getGlobal("glbstopProcess");
//Long glbLastWorkItemId = (Long)kcontext.getKnowledgeRuntime().getGlobal("glbLastWorkItemId");

String glbtype = (String)kcontext.getKnowledgeRuntime().getGlobal("glbType");
System.out.println("glbtype=&gt;"+glbtype);
//kcontext.setVariable("type",glbtype);

String glbtimestamp = (String)kcontext.getKnowledgeRuntime().getGlobal("glbtimestamp");
System.out.println("glbtimestamp=&gt;"+glbtimestamp);
String Input4 = (String)kcontext.getVariable("input4");

kcontext.setVariable("timestamp", Input4);


String Input2 = (String)kcontext.getVariable("input2");
kcontext.setVariable("type", Input2);


System.out.println("before glbName=&gt;"+(String)kcontext.getKnowledgeRuntime().getGlobal("name"));

String Input3 = (String)kcontext.getVariable("input3");
kcontext.setVariable("name", Input3);

String Input1 = (String)kcontext.getVariable("input1");
kcontext.setVariable("processInstanceId", Input1);

if((String)kcontext.getKnowledgeRuntime().getGlobal("glbProcessInstanceId")==null){
kcontext.getKnowledgeRuntime().setGlobal("glbProcessInstanceId", Input1);
//glbProcessInstanceId = (String)kcontext.getKnowledgeRuntime().getGlobal("glbProcessInstanceId");

}


System.out.println("before glbProcessInstanceId=&gt;"+(String)kcontext.getKnowledgeRuntime().getGlobal("glbProcessInstanceId"));
 
 
kcontext.setVariable("stopProcess", (String)kcontext.getKnowledgeRuntime().getGlobal("glbstopProcess"));
 
kcontext.setVariable("restart","False");
  

//System.out.println("java tmp stop process=&gt;"+tmp.Tmp.getStopProcess());


//kcontext.getKieRuntime().signalEvent("Signal_2", "AA");




                
if (((org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl) kcontext.getProcessInstance()).getMetaData().containsKey("ParentProcessInstanceId")) {  
    ((org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl) kcontext.getProcessInstance()).setVariable("ParentProcessInstanceId", ((org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl) kcontext.getProcessInstance()).getMetaData().get("ParentProcessInstanceId"));  
}

System.out.println("in subflow ParentProcessInstanceId=&gt;"+kcontext.getVariable("ParentProcessInstanceId"));

Long PPID = (Long)kcontext.getNodeInstance().getVariable("ParentProcessInstanceId");
Long PID = (Long)kcontext.getProcessInstance().getId();
Long e = (Long)22;
 String Timestamp = (String)kcontext.getVariable("timestamp"); 

//if(tmp.Tmp.getSubProcessList().containsKey(PPID)){
tmp.Tmp.addSubProcessList(Timestamp,PPID,PID);//get(PPID).add(PID);

//}
</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:scriptTask isForCompensation="false" startQuantity="1" completionQuantity="1" name="finish" id="_1423794118389">
            <bpmn:extensionElements>
                <jbpmn:ShapeDesign>{"outer":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(226,232,236)"},"border":{"color":"RGB(108,142,183)","width":2.5}},"inner":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(255,248,159)"},"border":{"color":"RGB(30,69,123)","width":1.0}}}</jbpmn:ShapeDesign>
            </bpmn:extensionElements>
            <bpmn:incoming>_1427349174985</bpmn:incoming>
            <bpmn:outgoing>_1427349176352</bpmn:outgoing>
            <bpmn:script> 

String Timestamp =  (String)kcontext.getVariable("timestamp");

kcontext.getKnowledgeRuntime().setGlobal("name", kcontext.getVariable("name"));

System.out.println("after glbName=&gt;"+kcontext.getKnowledgeRuntime().getGlobal("name"));
System.out.println("after sub processInstanceId=&gt;"+kcontext.getVariable("processInstanceId"));
System.out.println("after sub stopProcess=&gt;"+kcontext.getVariable("stopProcess"));

kcontext.getKnowledgeRuntime().setGlobal("glbstopProcess", kcontext.getVariable("stopProcess"));

kcontext.getKnowledgeRuntime().setGlobal("glbstopProcess",  kcontext.getVariable("stopProcess"));
System.out.println("after glbstopProcess=&gt;"+kcontext.getKnowledgeRuntime().getGlobal("glbstopProcess"));

System.out.println("after sub result=&gt;"+kcontext.getVariable("result"));
 
 String processInstanceId = (String)kcontext.getVariable("processInstanceId");
 System.out.println("in sub finish processInstanceId:"+processInstanceId);

String Restart = (String)kcontext.getVariable("restart");
//String index = tmp.Tmp.getTaskDataList().get(Long.valueOf(processInstanceId)).getTaskName();
String index = tmp.Tmp.getTaskName(Long.valueOf(processInstanceId));

	//String[] provisionData = (String[])tmp.Tmp.getTaskDataList().get(Long.valueOf(processInstanceId)).getProvisionData();
	String[] provisionData = (String[])tmp.Tmp.getProvisionData(Long.valueOf(processInstanceId));
		
	String taskListSize = "0";
	
	//if(((String)tmp.Tmp.getTaskDataList().get(Long.valueOf(processInstanceId)).getType()).equals("FlowCounter")){
    if(((String)tmp.Tmp.getType(Long.valueOf(processInstanceId))).equals("FlowCounter")){

     	System.out.println("bpmn in flowcounter!");
	     taskListSize = "2";
	
	}else {
	    taskListSize = String.valueOf(provisionData.length);
	
	}
	 
						  
			System.out.println("resource staticTaskData.getTaskName()=&gt;"+index);
			System.out.println("resource staticTaskData.getProvisionData() length=&gt;"+taskListSize);
	

if(Restart=="False"){

System.out.println("finish mary restart == false");
	String  Taskname = (String)kcontext.getVariable("name");
	 

	
Taskname =  String.valueOf(Integer.valueOf(Taskname)+1);
                       System.out.println("in finish Taskname=&gt;"+Taskname);

	kcontext.setVariable("name", Taskname);
                        kcontext.setVariable("output1", Taskname);

	kcontext.getKnowledgeRuntime().setGlobal("name", kcontext.getVariable("name"));
	
	//DB.DBConnectionDemo.excecuteSql("wslog","insert into `core_task` (`processInstanceId`,`Taskname`, `TaskTime`,`TaskResponseTime`, `TaskResult`,`TaskErrorCode`) values (\'"+processInstanceId+"\',\'"+tmp.Tmp.getTaskName(Long.valueOf(processInstanceId))+"\',\'"+tmp.Tmp.getRequestTime(Long.valueOf(processInstanceId))+"\',\'"+tmp.Tmp.getResponseTime(Long.valueOf(processInstanceId))+"\',\'"+tmp.Tmp.getResult(Long.valueOf(processInstanceId))+"\',\'"+tmp.Tmp.getErrorCode(Long.valueOf(processInstanceId))+"\')");    


//if(index.equals(taskListSize)){
 if(false){
 
	    System.out.println("index==tasklistsize");   
		   
		//tmp.Tmp.getProcessList().remove(Long.valueOf(processInstanceId));
//no more processlist		
//tmp.Tmp.removeProcessList(Timestamp,Long.valueOf(processInstanceId));
//DB.DBConnectionDemo.excecuteSql("bpmdata", "update `processdata` set `isfinished`='yes' where `starttime`='"+Timestamp+"';");

//DB.DBConnectionDemo.excecutejpaSql("bpmdata", "update `processdata` set `isfinished`='yes' where `starttime`='"+Timestamp+"';");


String ft = tool.getDate.getDate();

System.out.println("ft:"+ft);

DB.DBConnectionDemo.excecutejpaSql("bpmdata", "update `processdata` set `isfinished`='yes', `finishtime`='"+ft+"'  where `starttime`='"+Timestamp+"';");

tmp.Tmp.removestarttimeList(Timestamp,Long.valueOf(processInstanceId));
tmp.Tmp.removeStopProcessList(Long.valueOf(Long.valueOf(processInstanceId)));
//tmp.Tmp.removeTaskDataList(Long.valueOf(Long.valueOf(processInstanceId)));
		//tool.FileIO.delPID("/home/syscom/PID.txt", processInstanceId);
//no more processlist		 
//DB.DBConnectionDemo.editRuntimeval("processlist",processInstanceId,"del");

      
		//tmp.Tmp.getSubProcessList().remove(Long.valueOf(processInstanceId)); 
        tmp.Tmp.removeSubProcessList(Long.valueOf(processInstanceId));		
		   
 
		 
		//if(tmp.Tmp.getTaskDataList().get(Long.valueOf(processInstanceId)).isNeedCallback()==true){
		if(tmp.Tmp.isNeedCallback(Long.valueOf(processInstanceId))==true){
    
			System.out.println("in finish  needcallback!");
				 
				 

			ws_client.Tester tt = new ws_client.Tester();
		 	   
			//when test use the follwing line
			tt.testWSClient1("http://"+ws_client.Tester.webIP+":"+ws_client.Tester.webPort+"/"+ws_client.Tester.webTag+"/taskCallback", new model.TaskData(processInstanceId,tmp.Tmp.getTaskName(Long.valueOf(processInstanceId)),tmp.Tmp.getRequestTime(Long.valueOf(processInstanceId)),tmp.Tmp.getResponseTime(Long.valueOf(processInstanceId)),tmp.Tmp.getResult(Long.valueOf(processInstanceId)),tmp.Tmp.getErrorCode(Long.valueOf(processInstanceId)),tmp.Tmp.getType(Long.valueOf(processInstanceId)),tmp.Tmp.getProvisionData(Long.valueOf(processInstanceId)),tmp.Tmp.isNeedCallback(Long.valueOf(processInstanceId))));
                     
		}
	 
	}

}else{


System.out.println("not final task:"+Taskname);

}

System.out.println("finish processinstances=&gt;"+kcontext.getKieRuntime().getProcessInstances().toString());
 
//tmp.Tmp.getTaskDataList().get(Long.valueOf(processInstanceId)).setResult(null);
//tmp.Tmp.setResult(Long.valueOf(processInstanceId),null);


String glbProcessInstanceId = (String)kcontext.getKnowledgeRuntime().getGlobal("glbProcessInstanceId");
String Input1 = (String)kcontext.getVariable("input1");

if(glbProcessInstanceId==null){
kcontext.getKnowledgeRuntime().setGlobal("glbProcessInstanceId", Input1);
glbProcessInstanceId = (String)kcontext.getKnowledgeRuntime().getGlobal("glbProcessInstanceId");

}


System.out.println("after glbProcessInstanceId=&gt;"+glbProcessInstanceId);

//new
if(tmp.Tmp.getStopProcessList().contains(Long.valueOf((String)kcontext.getKieRuntime().getGlobal("glbProcessInstanceId")))){
       
                           if(kcontext.getNodeInstance().getNodeName().equals("finish")){

                              kcontext.getKieRuntime().abortProcessInstance(kcontext.getProcessInstance().getId());
                           
                             if(kcontext.getKieRuntime().getProcessInstance(Long.valueOf((String)kcontext.getKieRuntime().getGlobal("glbProcessInstanceId")))!=null){
                                kcontext.getKieRuntime().abortProcessInstance(Long.valueOf((String)kcontext.getKieRuntime().getGlobal("glbProcessInstanceId")));
                            }
                            
                        
                            System.out.println("eventlistener processinstance=&gt;"+kcontext.getKieRuntime().getProcessInstances().toString());
                      
                        //no more processlist  
                        //tmp.Tmp.removeProcessList(Timestamp,Long.valueOf((String)kcontext.getKieRuntime().getGlobal("glbProcessInstanceId")));  
//DB.DBConnectionDemo.excecuteSql("bpmdata", "update `processdata` set `isfinished`='yes' where `starttime`='"+Timestamp+"';");

String ft = tool.getDate.getDate();
System.out.println("ft:"+ft);

DB.DBConnectionDemo.excecutejpaSql("bpmdata", "update `processdata` set `isfinished`='yes', `finishtime`='"+ft+"' where `starttime`='"+Timestamp+"';");

tmp.Tmp.removestarttimeList(Timestamp,Long.valueOf((String)kcontext.getKieRuntime().getGlobal("glbProcessInstanceId"))); 
//tmp.Tmp.removeTaskDataList(Long.valueOf(Long.valueOf(processInstanceId)));
                        //tool.FileIO.delPID("/home/syscom/PID.txt", (String)kcontext.getKieRuntime().getGlobal("glbProcessInstanceId"));
						 //DB.DBConnectionDemo.editRuntimeval("processlist",(String)kcontext.getKieRuntime().getGlobal("glbProcessInstanceId"),"del");
						
                        //tmp.Tmp.removeSubProcessList(Long.valueOf((String)kcontext.getKieRuntime().getGlobal("glbProcessInstanceId")));
                        
                        tmp.Tmp.removeStopProcessList(Long.valueOf((String)kcontext.getKieRuntime().getGlobal("glbProcessInstanceId")));
                            
                       
                        

                    System.out.println("eventlistener in finish!");
                    
                    }  
              
                     
                   
                }else{
        
                    System.out.println("no stop process~");
            
                }
</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:task isForCompensation="false" startQuantity="1" completionQuantity="1" name="task" id="_1423796124140" taskName="xx">
            <bpmn:extensionElements>
                <jbpmn:ShapeDesign>{"outer":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(226,232,236)"},"border":{"color":"RGB(108,142,183)","width":2.5}},"inner":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(255,248,159)"},"border":{"color":"RGB(30,69,123)","width":1.0}}}</jbpmn:ShapeDesign>
            </bpmn:extensionElements>
            <bpmn:incoming>_1436776893985</bpmn:incoming>
            <bpmn:outgoing>_1435045934337</bpmn:outgoing>
            <bpmn:ioSpecification id="_142379612547021">
                <bpmn:dataInput name="name" id="_142379615544024"/>
                <bpmn:dataInput name="processInstanceId" id="_142381116710814"/>
                <bpmn:dataInput name="stopProcess" id="_142407019493525"/>
                <bpmn:dataInput name="restart" id="_142474202473930"/>
                <bpmn:dataInput name="type" id="_142613207969619"/>
                <bpmn:dataInput name="timestamp" itemSubjectRef="String" isCollection="false" id="_143252617197520"/>
                <bpmn:dataInput name="taskname" itemSubjectRef="String" isCollection="false" id="_143563273127836"/>
                <bpmn:dataOutput name="name" id="_142379616348827"/>
                <bpmn:dataOutput name="result" id="_142407565889121"/>
                <bpmn:dataOutput name="restart" id="_142474259976144"/>
                <bpmn:inputSet id="_143563273198637">
                    <bpmn:dataInputRefs>_142379615544024</bpmn:dataInputRefs>
                    <bpmn:dataInputRefs>_142381116710814</bpmn:dataInputRefs>
                    <bpmn:dataInputRefs>_142407019493525</bpmn:dataInputRefs>
                    <bpmn:dataInputRefs>_142474202473930</bpmn:dataInputRefs>
                    <bpmn:dataInputRefs>_142613207969619</bpmn:dataInputRefs>
                    <bpmn:dataInputRefs>_143252617197520</bpmn:dataInputRefs>
                    <bpmn:dataInputRefs>_143563273127836</bpmn:dataInputRefs>
                </bpmn:inputSet>
                <bpmn:outputSet id="_142735302138988">
                    <bpmn:dataOutputRefs>_142379616348827</bpmn:dataOutputRefs>
                    <bpmn:dataOutputRefs>_142407565889121</bpmn:dataOutputRefs>
                    <bpmn:dataOutputRefs>_142474259976144</bpmn:dataOutputRefs>
                </bpmn:outputSet>
            </bpmn:ioSpecification>
            <bpmn:dataInputAssociation id="_142379615544023">
                <bpmn:sourceRef>name</bpmn:sourceRef>
                <bpmn:targetRef>_142379615544024</bpmn:targetRef>
            </bpmn:dataInputAssociation>
            <bpmn:dataInputAssociation id="_142381116710813">
                <bpmn:sourceRef>processInstanceId</bpmn:sourceRef>
                <bpmn:targetRef>_142381116710814</bpmn:targetRef>
            </bpmn:dataInputAssociation>
            <bpmn:dataInputAssociation id="_142407019493524">
                <bpmn:sourceRef>stopProcess</bpmn:sourceRef>
                <bpmn:targetRef>_142407019493525</bpmn:targetRef>
            </bpmn:dataInputAssociation>
            <bpmn:dataInputAssociation id="_142474202473929">
                <bpmn:sourceRef>restart</bpmn:sourceRef>
                <bpmn:targetRef>_142474202473930</bpmn:targetRef>
            </bpmn:dataInputAssociation>
            <bpmn:dataInputAssociation id="_142613207969618">
                <bpmn:sourceRef>type</bpmn:sourceRef>
                <bpmn:targetRef>_142613207969619</bpmn:targetRef>
            </bpmn:dataInputAssociation>
            <bpmn:dataInputAssociation id="_143252617197519">
                <bpmn:sourceRef>timestamp</bpmn:sourceRef>
                <bpmn:targetRef>_143252617197520</bpmn:targetRef>
            </bpmn:dataInputAssociation>
            <bpmn:dataInputAssociation id="_143563273127835">
                <bpmn:sourceRef>taskname</bpmn:sourceRef>
                <bpmn:targetRef>_143563273127836</bpmn:targetRef>
            </bpmn:dataInputAssociation>
            <bpmn:dataOutputAssociation id="_142379616348826">
                <bpmn:sourceRef>_142379616348827</bpmn:sourceRef>
                <bpmn:targetRef>name</bpmn:targetRef>
            </bpmn:dataOutputAssociation>
            <bpmn:dataOutputAssociation id="_142407565889120">
                <bpmn:sourceRef>_142407565889121</bpmn:sourceRef>
                <bpmn:targetRef>result</bpmn:targetRef>
            </bpmn:dataOutputAssociation>
            <bpmn:dataOutputAssociation id="_142474259976143">
                <bpmn:sourceRef>_142474259976144</bpmn:sourceRef>
                <bpmn:targetRef>restart</bpmn:targetRef>
            </bpmn:dataOutputAssociation>
        </bpmn:task>
        <bpmn:endEvent name="innerEnd" id="_1423812167017">
            <bpmn:extensionElements>
                <jbpmn:ShapeDesign>{"outer":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(226,232,236)"},"border":{"color":"RGB(108,142,183)","width":3.0}},"inner":{"background":{"startColor":"RGB(30,69,123)","endColor":"RGB(30,69,123)"},"border":{"color":"RGB(30,69,123)","width":1.0}}}</jbpmn:ShapeDesign>
            </bpmn:extensionElements>
            <bpmn:incoming>_1427349176352</bpmn:incoming>
            <bpmn:terminateEventDefinition id="_142381216702923"/>
        </bpmn:endEvent>
        <bpmn:userTask implementation="##unspecified" isForCompensation="false" startQuantity="1" completionQuantity="1" name="Fail Task Issue" id="_1424058280287">
            <bpmn:extensionElements>
                <jbpmn:ShapeDesign>{"outer":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(226,232,236)"},"border":{"color":"RGB(108,142,183)","width":2.5}},"inner":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(255,248,159)"},"border":{"color":"RGB(30,69,123)","width":1.0}}}</jbpmn:ShapeDesign>
            </bpmn:extensionElements>
            <bpmn:incoming>_1436774848173</bpmn:incoming>
            <bpmn:outgoing>_1424075591908</bpmn:outgoing>
            <bpmn:ioSpecification id="_1424068076771174">
                <bpmn:dataInput name="Skippable" id="DataInput_5"/>
                <bpmn:dataOutput name="restart" id="_142407670120845"/>
                <bpmn:inputSet id="_142613206682417">
                    <bpmn:dataInputRefs>DataInput_5</bpmn:dataInputRefs>
                </bpmn:inputSet>
                <bpmn:outputSet id="_143512985117133">
                    <bpmn:dataOutputRefs>_142407670120845</bpmn:dataOutputRefs>
                </bpmn:outputSet>
            </bpmn:ioSpecification>
            <bpmn:dataInputAssociation id="DataInputAssociation_5">
                <bpmn:targetRef>DataInput_5</bpmn:targetRef>
                <bpmn:assignment id="Assignment_5">
                    <bpmn:from id="FormalExpression_1">true</bpmn:from>
                    <bpmn:to xsi:type="bpmn:tFormalExpression" id="FormalExpression_10">DataInput_5</bpmn:to>
                </bpmn:assignment>
            </bpmn:dataInputAssociation>
            <bpmn:dataOutputAssociation id="_142407670120844">
                <bpmn:sourceRef>_142407670120845</bpmn:sourceRef>
                <bpmn:targetRef>restart</bpmn:targetRef>
            </bpmn:dataOutputAssociation>
            <bpmn:potentialOwner id="_1424058458523135">
                <bpmn:resourceAssignmentExpression id="ResourceAssignmentExpression_1">
                    <bpmn:formalExpression id="FormalExpression_1">mary</bpmn:formalExpression>
                </bpmn:resourceAssignmentExpression>
            </bpmn:potentialOwner>
        </bpmn:userTask>
        <bpmn:exclusiveGateway gatewayDirection="Diverging" name="" id="_1424075581072">
            <bpmn:extensionElements>
                <jbpmn:ShapeDesign>{"outer":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(226,232,236)"},"border":{"color":"RGB(108,142,183)","width":1.5}},"inner":{"background":{"startColor":"RGB(30,69,123)","endColor":"RGB(30,69,123)"},"border":{"color":"RGB(30,69,123)","width":1.0}}}</jbpmn:ShapeDesign>
            </bpmn:extensionElements>
            <bpmn:incoming>_1435045934337</bpmn:incoming>
            <bpmn:outgoing>_1436774846243</bpmn:outgoing>
            <bpmn:outgoing>_1436774848173</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:exclusiveGateway gatewayDirection="Converging" name="" id="_1424075585184">
            <bpmn:extensionElements>
                <jbpmn:ShapeDesign>{"outer":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(226,232,236)"},"border":{"color":"RGB(108,142,183)","width":1.5}},"inner":{"background":{"startColor":"RGB(30,69,123)","endColor":"RGB(30,69,123)"},"border":{"color":"RGB(30,69,123)","width":1.0}}}</jbpmn:ShapeDesign>
            </bpmn:extensionElements>
            <bpmn:incoming>_1424075591908</bpmn:incoming>
            <bpmn:incoming>_1436774846243</bpmn:incoming>
            <bpmn:outgoing>_1427349166464</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:sequenceFlow sourceRef="_1424058280287" targetRef="_1424075585184" id="_1424075591908" drools:priority="1" xmlns:drools="http://www.jboss.org/drools"/>
        <bpmn:exclusiveGateway gatewayDirection="Diverging" name="gateway2" id="_1424076490055">
            <bpmn:extensionElements>
                <jbpmn:ShapeDesign>{"outer":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(226,232,236)"},"border":{"color":"RGB(108,142,183)","width":1.5}},"inner":{"background":{"startColor":"RGB(30,69,123)","endColor":"RGB(30,69,123)"},"border":{"color":"RGB(30,69,123)","width":1.0}}}</jbpmn:ShapeDesign>
            </bpmn:extensionElements>
            <bpmn:incoming>_1427349166464</bpmn:incoming>
            <bpmn:outgoing>_1425610915437</bpmn:outgoing>
            <bpmn:outgoing>_1427349174985</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:exclusiveGateway gatewayDirection="Converging" name="gateway1" id="_1424076502588">
            <bpmn:extensionElements>
                <jbpmn:ShapeDesign>{"outer":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(226,232,236)"},"border":{"color":"RGB(108,142,183)","width":1.5}},"inner":{"background":{"startColor":"RGB(30,69,123)","endColor":"RGB(30,69,123)"},"border":{"color":"RGB(30,69,123)","width":1.0}}}</jbpmn:ShapeDesign>
            </bpmn:extensionElements>
            <bpmn:incoming>_1425610915437</bpmn:incoming>
            <bpmn:incoming>_1427275318886</bpmn:incoming>
            <bpmn:outgoing>_1436776893985</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:sequenceFlow sourceRef="_1424076490055" targetRef="_1424076502588" id="_1425610915437" drools:priority="1" xmlns:drools="http://www.jboss.org/drools">
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" id="_142561091939226">String Restart = (String)kcontext.getVariable("restart");
System.out.println("in subflow2 Restart=&gt;"+Restart);
if(Restart=="True"){
System.out.println("mary restart == true");
 kcontext.getKieRuntime().getWorkItemManager().registerWorkItemHandler("xx", new handler.TestWorkItemHandler1());

return true;
}else{
System.out.println("mary restart == false");
kcontext.getKieRuntime().getWorkItemManager().registerWorkItemHandler("xx", new handler.TestWorkItemHandler1());

return false;
}</bpmn:conditionExpression>
        </bpmn:sequenceFlow>
        <bpmn:startEvent isInterrupting="true" parallelMultiple="false" name="innerStart" id="_1423790747732">
            <bpmn:extensionElements>
                <jbpmn:ShapeDesign>{"outer":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(226,232,236)"},"border":{"color":"RGB(108,142,183)","width":1.0}},"inner":{"background":{"startColor":"RGB(255,255,255)","endColor":"RGB(255,248,159)"},"border":{"color":"RGB(30,69,123)","width":1.0}}}</jbpmn:ShapeDesign>
            </bpmn:extensionElements>
            <bpmn:outgoing>_1427268750065</bpmn:outgoing>
        </bpmn:startEvent>
        <bpmn:sequenceFlow sourceRef="_1423790747732" targetRef="_1423792335617" id="_1427268750065" drools:priority="1" xmlns:drools="http://www.jboss.org/drools"/>
        <bpmn:sequenceFlow sourceRef="_1423792335617" targetRef="_1424076502588" id="_1427275318886" drools:priority="1" xmlns:drools="http://www.jboss.org/drools"/>
        <bpmn:sequenceFlow sourceRef="_1424075585184" targetRef="_1424076490055" id="_1427349166464"/>
        <bpmn:sequenceFlow sourceRef="_1424076490055" targetRef="_1423794118389" id="_1427349174985">
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" id="_142734918150058">String Restart = (String)kcontext.getVariable("restart");

System.out.println("in subflow1 Restart=&gt;"+Restart);

if(Restart=="False"){
System.out.println("mary restart == false");
 kcontext.getKieRuntime().getWorkItemManager().registerWorkItemHandler("xx", new handler.TestWorkItemHandler1());


return true;
}else{
System.out.println("mary restart == true");
kcontext.getKieRuntime().getWorkItemManager().registerWorkItemHandler("xx", new handler.TestWorkItemHandler1());

return false;
}
 
</bpmn:conditionExpression>
        </bpmn:sequenceFlow>
        <bpmn:sequenceFlow sourceRef="_1423794118389" targetRef="_1423812167017" id="_1427349176352"/>
        <bpmn:sequenceFlow sourceRef="_1423796124140" targetRef="_1424075581072" id="_1435045934337"/>
        <bpmn:sequenceFlow sourceRef="_1424075581072" targetRef="_1424075585184" id="_1436774846243">
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" id="_143677491284360">String Result = (String)kcontext.getVariable("result");

System.out.println("in subflow1 result:"+Result);
if(Result=="Success"){
System.out.println("sub task success!!");
return true;
}else {
System.out.println("sub task success!! fail");
return false;

}

//else {
//return false;

//}
 

</bpmn:conditionExpression>
        </bpmn:sequenceFlow>
        <bpmn:sequenceFlow sourceRef="_1424075581072" targetRef="_1424058280287" id="_1436774848173">
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" id="_143677491284361">String Result = (String)kcontext.getVariable("result");
System.out.println("in subflow2 result:"+Result);
if(Result=="Fail"){
System.out.println("sub task fail!!");
return true;
}else {
System.out.println("sub task fail!! success");
return false;
}

//else {
//return false;

//}</bpmn:conditionExpression>
        </bpmn:sequenceFlow>
        <bpmn:sequenceFlow sourceRef="_1424076502588" targetRef="_1423796124140" id="_1436776893985"/>
    </bpmn:process>
    <bpmndi:BPMNDiagram id="_143677629432978">
        <bpmndi:BPMNPlane id="_143677629432979">
            <bpmndi:BPMNShape bpmnElement="_1423792335617" id="_1423792335617_gui">
                <omgdc:Bounds x="113.0" y="43.0" width="80.0" height="64.0"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="136.0" y="115.0" width="31.0" height="21.0"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape bpmnElement="_1423794118389" id="_1423794118389_gui">
                <omgdc:Bounds x="663.0" y="30.0" width="80.0" height="64.0"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="686.0" y="102.0" width="32.0" height="21.0"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape bpmnElement="_1423796124140" id="_1423796124140_gui">
                <omgdc:Bounds x="266.0" y="211.0" width="80.0" height="64.0"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="296.0" y="283.0" width="23.0" height="19.0"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape bpmnElement="_1423812167017" id="_1423812167017_gui">
                <omgdc:Bounds x="764.0" y="30.0" width="42.0" height="42.0"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="758.0" y="80.0" width="52.0" height="21.0"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape bpmnElement="_1424058280287" id="_1424058280287_gui">
                <omgdc:Bounds x="470.0" y="173.0" width="80.0" height="64.0"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="475.0" y="245.0" width="84.0" height="19.0"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape bpmnElement="_1424075581072" id="_1424075581072_gui">
                <omgdc:Bounds x="439.0" y="107.0" width="42.0" height="42.0"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape bpmnElement="_1424075585184" id="_1424075585184_gui">
                <omgdc:Bounds x="528.0" y="104.0" width="42.0" height="42.0"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape bpmnElement="_1424076490055" id="_1424076490055_gui">
                <omgdc:Bounds x="594.0" y="62.0" width="42.0" height="42.0"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="613.0" y="108.0" width="52.0" height="19.0"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape bpmnElement="_1424076502588" id="_1424076502588_gui">
                <omgdc:Bounds x="285.0" y="54.0" width="42.0" height="42.0"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="283.0" y="100.0" width="52.0" height="19.0"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape bpmnElement="_1423790747732" id="_1423790747732_gui">
                <omgdc:Bounds x="44.0" y="54.0" width="42.0" height="42.0"/>
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="35.0" y="107.0" width="55.0" height="21.0"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge bpmnElement="_1424075591908" id="_1424075591908_gui">
                <omgdi:waypoint x="525.0" y="174.0"/>
                <omgdi:waypoint x="544.0" y="142.0"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge bpmnElement="_1425610915437" id="_1425610915437_gui">
                <omgdi:waypoint x="592.0" y="82.0"/>
                <omgdi:waypoint x="327.0" y="82.0"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge bpmnElement="_1427268750065" id="_1427268750065_gui">
                <omgdi:waypoint x="86.0" y="75.0"/>
                <omgdi:waypoint x="114.0" y="75.0"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge bpmnElement="_1427275318886" id="_1427275318886_gui">
                <omgdi:waypoint x="189.0" y="74.0"/>
                <omgdi:waypoint x="283.0" y="74.0"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge bpmnElement="_1427349166464" id="_1427349166464_gui">
                <omgdi:waypoint x="565.0" y="118.0"/>
                <omgdi:waypoint x="598.0" y="89.0"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge bpmnElement="_1427349174985" id="_1427349174985_gui">
                <omgdi:waypoint x="635.0" y="80.0"/>
                <omgdi:waypoint x="663.0" y="80.0"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge bpmnElement="_1427349176352" id="_1427349176352_gui">
                <omgdi:waypoint x="742.0" y="56.0"/>
                <omgdi:waypoint x="765.0" y="56.0"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge bpmnElement="_1435045934337" id="_1435045934337_gui">
                <omgdi:waypoint x="346.0" y="213.0"/>
                <omgdi:waypoint x="445.0" y="135.0"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge bpmnElement="_1436774846243" id="_1436774846243_gui">
                <omgdi:waypoint x="482.0" y="127.0"/>
                <omgdi:waypoint x="526.0" y="127.0"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge bpmnElement="_1436774848173" id="_1436774848173_gui">
                <omgdi:waypoint x="466.0" y="143.0"/>
                <omgdi:waypoint x="488.0" y="173.0"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge bpmnElement="_1436776893985" id="_1436776893985_gui">
                <omgdi:waypoint x="305.0" y="97.0"/>
                <omgdi:waypoint x="305.0" y="210.0"/>
            </bpmndi:BPMNEdge>
        </bpmndi:BPMNPlane>
    </bpmndi:BPMNDiagram>
</bpmn:definitions>
